// <auto-generated>
// ReSharper disable ConvertPropertyToExpressionBody
// ReSharper disable DoNotCallOverridableMethodsInConstructor
// ReSharper disable EmptyNamespace
// ReSharper disable InconsistentNaming
// ReSharper disable PartialMethodWithSinglePart
// ReSharper disable PartialTypeWithSinglePart
// ReSharper disable RedundantNameQualifier
// ReSharper disable RedundantOverridenMember
// ReSharper disable UseNameofExpression
// TargetFrameworkVersion = 4.5
#pragma warning disable 1591    //  Ignore "Missing XML Comment" warning


using Ejab.DAl.Common;
using System.ComponentModel.DataAnnotations.Schema;

namespace Ejab.DAl.Models
{

    // Request
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.33.0.0")]
    public class Request:BaseModel 
    {
        public int RequesterId { get; set; } // RequesterId
        public int RequestNumber { get; set; } // RequestNumber
        public System.DateTime Requestdate { get; set; } // Requestdate
        public string Title { get; set; } // Title (length: 100)
        public string Description { get; set; } // Description (length: 500)
      //  public int ServiceTypeId { get; set; } // ServiceTypeId
        public decimal? LocationFromlongitude { get; set; } // LocationFromlongitude
        public decimal? LocationFromLatitude { get; set; } // locationFromLatitude
        public string LocationFrom { get; set; } // LocationFrom (length: 250)
        public decimal? LocationToLongitude { get; set; } // LocationToLongitude
        public decimal? LocationToLatitude { get; set; } // LocationToLatitude
        public string LocationTo { get; set; } // LocationTo (length: 250)     
        //public System.TimeSpan? PeriodFrom { get; set; } // PeriodFrom
        //public System.TimeSpan? PeriodTo { get; set; } // PeriodTo
        public RequestStates RequestState { get; set; } // RequestState
        public bool IsActive { get; set; } // IsActive
        public System.DateTime ExpireDate { get; set; } // ExpireDate
        public bool? IsAccepted { get; set; }
        public System.DateTime StartingDate { get; set; }
        public string  Period { get; set; }
        public string  Quantity { get; set; }
        public string  ItemsInfo { get; set; }
        public int? RegionId { get; set; }     
        public string  Notes { get; set; }
        public RequestType RequestType { get; set; }
        public System.DateTime  PermissionDate{ get; set; }

        // Reverse navigation

        /// <summary>
        /// Child Messages where [Message].[RequestId] point to this entity (FK_dbo.Message_dbo.Request_RequestId)
        /// </summary>
        public virtual System.Collections.Generic.ICollection<Message> Messages { get; set; } // Message.FK_dbo.Message_dbo.Request_RequestId
        /// <summary>
        /// Child ProposalPrices where [proposalPrice].[ReqestId] point to this entity (FK_proposalPrice_Request)
        /// </summary>
        public virtual System.Collections.Generic.ICollection<ProposalPrice> ProposalPrices { get; set; } // proposalPrice.FK_proposalPrice_Request
        /// <summary>
        /// Child Ratings where [Rating].[RequstId] point to this entity (FK_dbo.Rating_dbo.Request_RequstId)
        /// </summary>
        public virtual System.Collections.Generic.ICollection<Rating> Ratings { get; set; } // Rating.FK_dbo.Rating_dbo.Request_RequstId
        /// <summary>
        /// Child RequestDetailes where [RequestDetaile].[RequestId] point to this entity (FK_dbo.RequestDetaile_dbo.Request_RequestId)
        /// </summary>
        public virtual System.Collections.Generic.ICollection<RequestDetaile> RequestDetailes { get; set; } // RequestDetaile.FK_dbo.RequestDetaile_dbo.Request_RequestId

        // Foreign keys

        /// <summary>
        /// Parent ServiceType pointed by [Request].([ServiceTypeId]) (FK_dbo.Request_dbo.ServiceType_ServiceTypeId)
        /// </summary>
     //   public virtual ServiceType ServiceType { get; set; } // FK_dbo.Request_dbo.ServiceType_ServiceTypeId

        /// <summary>
        /// Parent User pointed by [Request].([RequesterId]) (FK_Request_User)
        /// </summary>
        [ForeignKey("RequesterId")]
        public virtual User User { get; set; } // FK_Request_User
        [ForeignKey("RegionId")]
        public virtual Region Region { get; set; }

        public Request()
        {
            Messages = new System.Collections.Generic.List<Message>();
            ProposalPrices = new System.Collections.Generic.List<ProposalPrice>();
            Ratings = new System.Collections.Generic.List<Rating>();
            RequestDetailes = new System.Collections.Generic.List<RequestDetaile>();
        }
    }

}
// </auto-generated>
