// <auto-generated>
// ReSharper disable ConvertPropertyToExpressionBody
// ReSharper disable DoNotCallOverridableMethodsInConstructor
// ReSharper disable EmptyNamespace
// ReSharper disable InconsistentNaming
// ReSharper disable PartialMethodWithSinglePart
// ReSharper disable PartialTypeWithSinglePart
// ReSharper disable RedundantNameQualifier
// ReSharper disable RedundantOverridenMember
// ReSharper disable UseNameofExpression
// TargetFrameworkVersion = 4.5
#pragma warning disable 1591    //  Ignore "Missing XML Comment" warning


using Ejab.DAl.Models;

namespace Ejab.DAl
{

    // Request
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.33.0.0")]
    public class RequestConfiguration : System.Data.Entity.ModelConfiguration.EntityTypeConfiguration<Request>
    {
        public RequestConfiguration()
            : this("dbo")
        {
        }

        public RequestConfiguration(string schema)
        {
            ToTable("Request", schema);
            HasKey(x => x.Id);
            Property(x => x.Id).HasColumnName(@"Id").HasColumnType("int").IsRequired().HasDatabaseGeneratedOption(System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedOption.Identity);
            Property(x => x.RequesterId).HasColumnName(@"RequesterId").HasColumnType("int").IsRequired();
            Property(x => x.RequestNumber).HasColumnName(@"RequestNumber").HasColumnType("int").IsRequired();
            Property(x => x.Requestdate).HasColumnName(@"Requestdate").HasColumnType("datetime").IsRequired();
            Property(x => x.Title).HasColumnName(@"Title").HasColumnType("nvarchar").IsRequired().HasMaxLength(100);
            Property(x => x.Description).HasColumnName(@"Description").HasColumnType("nvarchar").IsRequired().HasMaxLength(500);
            //Property(x => x.ServiceTypeId).HasColumnName(@"ServiceTypeId").HasColumnType("int").IsRequired();
            Property(x => x.LocationFromlongitude).HasColumnName(@"LocationFromlongitude").HasColumnType("decimal").IsOptional().HasPrecision(9,6);
            Property(x => x.LocationFromLatitude).HasColumnName(@"locationFromLatitude").HasColumnType("decimal").IsOptional().HasPrecision(9,6);
            Property(x => x.LocationFrom).HasColumnName(@"LocationFrom").HasColumnType("nvarchar").IsOptional().HasMaxLength(250);
            Property(x => x.LocationToLongitude).HasColumnName(@"LocationToLongitude").HasColumnType("decimal").IsOptional().HasPrecision(9,6);
            Property(x => x.LocationToLatitude).HasColumnName(@"LocationToLatitude").HasColumnType("decimal").IsOptional().HasPrecision(9,6);
            Property(x => x.LocationTo).HasColumnName(@"LocationTo").HasColumnType("nvarchar").IsRequired().HasMaxLength(250);
         
            //Property(x => x.PeriodFrom).HasColumnName(@"PeriodFrom").HasColumnType("time").IsOptional();
            //Property(x => x.PeriodTo).HasColumnName(@"PeriodTo").HasColumnType("time").IsOptional();
            Property(x => x.RequestState).HasColumnName(@"RequestState").HasColumnType("int").IsRequired();
            Property(x => x.IsActive).HasColumnName(@"IsActive").HasColumnType("bit").IsRequired();
            Property(x => x.ExpireDate).HasColumnName(@"ExpireDate").HasColumnType("datetime").IsRequired();
            Property(x => x.FlgStatus).HasColumnName(@"FlgStatus").HasColumnType("smallint").IsRequired();
            Property(x => x.CreatedBy).HasColumnName(@"CreatedBy").HasColumnType("int").IsRequired();
            Property(x => x.UpdatedBy).HasColumnName(@"UpdatedBy").HasColumnType("int").IsOptional();
            Property(x => x.CreatedOn).HasColumnName(@"CreatedOn").HasColumnType("datetime").IsRequired();
            Property(x => x.UpdatedOn).HasColumnName(@"UpdatedOn").HasColumnType("datetime").IsOptional();
            // Foreign keys
            //HasRequired(a => a.ServiceType).WithMany(b => b.Requests).HasForeignKey(c => c.ServiceTypeId).WillCascadeOnDelete(false); // FK_dbo.Request_dbo.ServiceType_ServiceTypeId
            HasRequired(a => a.User).WithMany(b => b.Requests).HasForeignKey(c => c.RequesterId).WillCascadeOnDelete(false); // FK_Request_User
        }
    }

}
// </auto-generated>
