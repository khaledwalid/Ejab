// <auto-generated>
// ReSharper disable ConvertPropertyToExpressionBody
// ReSharper disable DoNotCallOverridableMethodsInConstructor
// ReSharper disable EmptyNamespace
// ReSharper disable InconsistentNaming
// ReSharper disable PartialMethodWithSinglePart
// ReSharper disable PartialTypeWithSinglePart
// ReSharper disable RedundantNameQualifier
// ReSharper disable RedundantOverridenMember
// ReSharper disable UseNameofExpression
// TargetFrameworkVersion = 4.5
#pragma warning disable 1591    //  Ignore "Missing XML Comment" warning


using Ejab.DAl.Models;

namespace Ejab.DAl
{

    // SuggestionsComplaint
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.33.0.0")]
    public class SuggestionsComplaintConfiguration : System.Data.Entity.ModelConfiguration.EntityTypeConfiguration<SuggestionsComplaint>
    {
        public SuggestionsComplaintConfiguration()
            : this("dbo")
        {
        }

        public SuggestionsComplaintConfiguration(string schema)
        {
            ToTable("SuggestionsComplaint", schema);
            HasKey(x => x.Id);

            Property(x => x.Id).HasColumnName(@"Id").HasColumnType("int").IsRequired().HasDatabaseGeneratedOption(System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedOption.Identity);
            Property(x => x.Date).HasColumnName(@"Date").HasColumnType("date").IsRequired();
            Property(x => x.Cause).HasColumnName(@"Cause").HasColumnType("nvarchar").IsRequired().HasMaxLength(500);
            Property(x => x.Name ).HasColumnName(@"Name").HasColumnType("nvarchar").IsRequired().HasMaxLength(100);
            Property(x => x.Email ).HasColumnName(@"Email").HasColumnType("nvarchar").IsRequired().HasMaxLength(200);
            Property(x => x.Phone ).HasColumnName(@"Phone").HasColumnType("nvarchar").IsRequired().HasMaxLength(100);
            //Property(x => x.CustomerId).HasColumnName(@"CustomerId").HasColumnType("int").IsRequired();
            //Property(x => x.Admin).HasColumnName(@"Admin").HasColumnType("int").IsOptional();
            //Property(x => x.ComplainUserId).HasColumnName(@"ComplainUserId").HasColumnType("int").IsRequired();
            Property(x => x.FlgStatus).HasColumnName(@"FlgStatus").HasColumnType("smallint").IsRequired();
            Property(x => x.CreatedBy).HasColumnName(@"CreatedBy").HasColumnType("int").IsRequired();
            Property(x => x.UpdatedBy).HasColumnName(@"UpdatedBy").HasColumnType("int").IsOptional();
            Property(x => x.CreatedOn).HasColumnName(@"CreatedOn").HasColumnType("datetime").IsRequired();
            Property(x => x.UpdatedOn).HasColumnName(@"UpdatedOn").HasColumnType("datetime").IsOptional();

            // Foreign keys
            //HasOptional(a => a.User_Admin).WithMany(b => b.Admin).HasForeignKey(c => c.Admin).WillCascadeOnDelete(false); // FK_dbo.SuggestionsComplaint_dbo.User_Admin
            //HasRequired(a => a.ComplainUser).WithMany(b => b.ComplainUser).HasForeignKey(c => c.ComplainUserId).WillCascadeOnDelete(false); // FK_dbo.SuggestionsComplaint_dbo.User_ComplainUserId
            //HasRequired(a => a.Customer).WithMany(b => b.Customer).HasForeignKey(c => c.CustomerId).WillCascadeOnDelete(false); // FK_dbo.SuggestionsComplaint_dbo.User_CustomerId
        }
    }

}
// </auto-generated>
