// <auto-generated>
// ReSharper disable ConvertPropertyToExpressionBody
// ReSharper disable DoNotCallOverridableMethodsInConstructor
// ReSharper disable InconsistentNaming
// ReSharper disable PartialMethodWithSinglePart
// ReSharper disable PartialTypeWithSinglePart
// ReSharper disable RedundantNameQualifier
// ReSharper disable RedundantOverridenMember
// ReSharper disable UseNameofExpression
// TargetFrameworkVersion = 4.5
#pragma warning disable 1591    //  Ignore "Missing XML Comment" warning


namespace Ejab.DAl
{

    // Trucks
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.32.0.0")]
    public partial class TruckConfig : System.Data.Entity.ModelConfiguration.EntityTypeConfiguration<Truck>
    {
        public TruckConfig()
            : this("dbo")
        {
        }

        public TruckConfig(string schema)
        {
            ToTable("Trucks", schema);
            HasKey(x => x.Id);

            Property(x => x.Name).HasColumnName(@"Name").HasColumnType("nvarchar").IsRequired().HasMaxLength(50);
            Property(x => x.Weight).HasColumnName(@"Weight").HasColumnType("int").IsOptional();
            Property(x => x.TypeId).HasColumnName(@"TypeId").HasColumnType("int").IsRequired();
            Property(x => x.IsOcuppied).HasColumnName(@"IsOcuppied").HasColumnType("bit").IsOptional();
            Property(x => x.AvialableNo).HasColumnName(@"AvialableNo").HasColumnType("int").IsOptional();
            Property(x => x.Capacity).HasColumnName(@"Capacity").HasColumnType("decimal").IsOptional().HasPrecision(18,6);
            Property(x => x.Description).HasColumnName(@"Description").HasColumnType("nvarchar").IsOptional().HasMaxLength(250);
            Property(x => x.Width).HasColumnName(@"Width").HasColumnType("int").IsOptional();
            Property(x => x.Height).HasColumnName(@"height").HasColumnType("int").IsOptional();
            Property(x => x.ParanetId).HasColumnName(@"ParanetId").HasColumnType("int").IsOptional();

            // Foreign keys
            HasRequired(a => a.TruckType).WithMany(b => b.Trucks).HasForeignKey(c => c.TypeId).WillCascadeOnDelete(false); // FK_Trucks_TruckType
            InitializePartial();
        }
        partial void InitializePartial();
    }

}
// </auto-generated>
