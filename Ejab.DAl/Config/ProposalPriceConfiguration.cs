// <auto-generated>
// ReSharper disable ConvertPropertyToExpressionBody
// ReSharper disable DoNotCallOverridableMethodsInConstructor
// ReSharper disable EmptyNamespace
// ReSharper disable InconsistentNaming
// ReSharper disable PartialMethodWithSinglePart
// ReSharper disable PartialTypeWithSinglePart
// ReSharper disable RedundantNameQualifier
// ReSharper disable RedundantOverridenMember
// ReSharper disable UseNameofExpression
// TargetFrameworkVersion = 4.5
#pragma warning disable 1591    //  Ignore "Missing XML Comment" warning


using Ejab.DAl.Models;

namespace Ejab.DAl
{

    // proposalPrice
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.33.0.0")]
    public class ProposalPriceConfiguration : System.Data.Entity.ModelConfiguration.EntityTypeConfiguration<ProposalPrice>
    {
        public ProposalPriceConfiguration()
            : this("dbo")
        {
        }

        public ProposalPriceConfiguration(string schema)
        {
            ToTable("proposalPrice", schema);
            HasKey(x => x.Id);

            Property(x => x.Id).HasColumnName(@"Id").HasColumnType("int").IsRequired().HasDatabaseGeneratedOption(System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedOption.Identity);
            Property(x => x.ReqestId).HasColumnName(@"ReqestId").HasColumnType("int").IsRequired();
            Property(x => x.Date).HasColumnName(@"Date").HasColumnType("datetime").IsRequired();
            Property(x => x.Price).HasColumnName(@"price").HasColumnType("money").IsRequired().HasPrecision(19,4);
            Property(x => x.ServiceProviderId).HasColumnName(@"ServiceProviderId").HasColumnType("int").IsRequired();
          //  Property(x => x.AcceptedBy).HasColumnName(@"AcceptedBy").HasColumnType("int").IsOptional();
            Property(x => x.IsAccepted).HasColumnName(@"IsAccepted").HasColumnType("bit").IsOptional();
            Property(x => x.FlgStatus).HasColumnName(@"FlgStatus").HasColumnType("smallint").IsRequired();
            Property(x => x.CreatedBy).HasColumnName(@"CreatedBy").HasColumnType("int").IsRequired();
            Property(x => x.UpdatedBy).HasColumnName(@"UpdatedBy").HasColumnType("int").IsOptional();
            Property(x => x.CreatedOn).HasColumnName(@"CreatedOn").HasColumnType("datetime").IsRequired();
            Property(x => x.UpdatedOn).HasColumnName(@"UpdatedOn").HasColumnType("datetime").IsOptional();

            // Foreign keys
           // HasOptional(a => a.User_AcceptedBy).WithMany(b => b.AcceptedBy).HasForeignKey(c => c.AcceptedBy).WillCascadeOnDelete(false); // FK_proposalPrice_User1
            HasRequired(a => a.Request).WithMany(b => b.ProposalPrices).HasForeignKey(c => c.ReqestId).WillCascadeOnDelete(false); // FK_proposalPrice_Request
            HasRequired(a => a.ServiceProvider).WithMany(b => b.ServiceProvider).HasForeignKey(c => c.ServiceProviderId).WillCascadeOnDelete(false); // FK_proposalPrice_User
        }
    }

}
// </auto-generated>
