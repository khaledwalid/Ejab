// <auto-generated>
// ReSharper disable ConvertPropertyToExpressionBody
// ReSharper disable DoNotCallOverridableMethodsInConstructor
// ReSharper disable EmptyNamespace
// ReSharper disable InconsistentNaming
// ReSharper disable PartialMethodWithSinglePart
// ReSharper disable PartialTypeWithSinglePart
// ReSharper disable RedundantNameQualifier
// ReSharper disable RedundantOverridenMember
// ReSharper disable UseNameofExpression
// TargetFrameworkVersion = 4.5

using Ejab.DAl.Models;

#pragma warning disable 1591    //  Ignore "Missing XML Comment" warning


namespace Ejab.DAl
{

    using System.Linq;

    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.33.0.0")]
    public partial class EjabContext : System.Data.Entity.DbContext, IEjabContext
    {
        public System.Data.Entity.DbSet<AcceptOffer> AcceptOffers { get; set; } // AcceptOffers
        public System.Data.Entity.DbSet<Device> Devices { get; set; } // Devices
        public System.Data.Entity.DbSet<Interest> Interests { get; set; } // Interests
        public System.Data.Entity.DbSet<Message> Messages { get; set; } // Message
        public System.Data.Entity.DbSet<Offer> Offers { get; set; } // Offer
        public System.Data.Entity.DbSet<OfferDetail> OfferDetails { get; set; } // OfferDetails
        public System.Data.Entity.DbSet<OfferImage> OfferImages { get; set; } // OfferImages
        public System.Data.Entity.DbSet<PredefinedAction> PredefinedActions { get; set; } // PredefinedActions
        public System.Data.Entity.DbSet<ProposalPrice> ProposalPrices { get; set; } // proposalPrice
        public System.Data.Entity.DbSet<Rating> Ratings { get; set; } // Rating
        public System.Data.Entity.DbSet<Request> Requests { get; set; } // Request
        public System.Data.Entity.DbSet<RequestDetaile> RequestDetailes { get; set; } // RequestDetaile
        public System.Data.Entity.DbSet<RequestDetailesPrice> RequestDetailesPrices { get; set; } // RequestDetailesPrices
        public System.Data.Entity.DbSet<ServiceType> ServiceTypes { get; set; } // ServiceType
        public System.Data.Entity.DbSet<SuggestionsComplaint> SuggestionsComplaints { get; set; } // SuggestionsComplaint
        public System.Data.Entity.DbSet<SysLog> SysLogs { get; set; } // SysLogs
        public System.Data.Entity.DbSet<Truck> Trucks { get; set; } // Trucks
        public System.Data.Entity.DbSet<TruckType> TruckTypes { get; set; } // TruckType
        public System.Data.Entity.DbSet<User> Users { get; set; } // User
        public System.Data.Entity.DbSet<UserDevice> UserDevices { get; set; } // UserDevices
        public System.Data.Entity.DbSet<Region > Regions { get; set; } // UserDevices
        public System.Data.Entity.DbSet<Setting > Settings { get; set; } // UserDevices
        public System.Data.Entity.DbSet<MailSubscribe> MailSubscribes { get; set; } // UserDevices
        public System.Data.Entity.DbSet<CommonQuestion> CommonQuestions { get; set; } // UserDevices
        public System.Data.Entity.DbSet<Statistics > Statistics { get; set; }
       // public System.Data.Entity.DbSet<ComplaintStatus> ComplaintStatus { get; set; }
        public System.Data.Entity.DbSet<Notification > Notification { get; set; }
        public System.Data.Entity.DbSet<AboutUs> AboutUs { get; set; }
        public System.Data.Entity.DbSet<AboutApplication > AboutApplication { get; set; }
        public System.Data.Entity.DbSet<UserToken> UserTokens { get; set; }

        //static EjabContext()
        //{
        //    System.Data.Entity.Database.SetInitializer<EjabContext>(null);
        //}

        public EjabContext()
            : base("Name=EjabContext")
        {
            InitializePartial();
        }

        //public EjabContext(string connectionString)
        //    : base(connectionString)
        //{
        //}

        //public EjabContext(string connectionString, System.Data.Entity.Infrastructure.DbCompiledModel model)
        //    : base(connectionString, model)
        //{
        //}

        //public EjabContext(System.Data.Common.DbConnection existingConnection, bool contextOwnsConnection)
        //    : base(existingConnection, contextOwnsConnection)
        //{
        //}

        //public EjabContext(System.Data.Common.DbConnection existingConnection, System.Data.Entity.Infrastructure.DbCompiledModel model, bool contextOwnsConnection)
        //    : base(existingConnection, model, contextOwnsConnection)
        //{
        //}

        protected override void Dispose(bool disposing)
        {
            base.Dispose(disposing);
        }

        public bool IsSqlParameterNull(System.Data.SqlClient.SqlParameter param)
        {
            var sqlValue = param.SqlValue;
            var nullableValue = sqlValue as System.Data.SqlTypes.INullable;
            if (nullableValue != null)
                return nullableValue.IsNull;
            return (sqlValue == null || sqlValue == System.DBNull.Value);
        }

        protected override void OnModelCreating(System.Data.Entity.DbModelBuilder modelBuilder)
        {
            base.OnModelCreating(modelBuilder);

            modelBuilder.Configurations.Add(new AcceptOfferConfiguration());
            modelBuilder.Configurations.Add(new DeviceConfiguration());
            modelBuilder.Configurations.Add(new InterestConfiguration());
            modelBuilder.Configurations.Add(new MessageConfiguration());
            modelBuilder.Configurations.Add(new OfferConfiguration());
            modelBuilder.Configurations.Add(new OfferDetailConfiguration());
            modelBuilder.Configurations.Add(new OfferImageConfiguration());
            modelBuilder.Configurations.Add(new PredefinedActionConfiguration());
            modelBuilder.Configurations.Add(new ProposalPriceConfiguration());
            modelBuilder.Configurations.Add(new RatingConfiguration());
            modelBuilder.Configurations.Add(new RequestConfiguration());
            modelBuilder.Configurations.Add(new RequestDetaileConfiguration());
            modelBuilder.Configurations.Add(new RequestDetailesPriceConfiguration());
            modelBuilder.Configurations.Add(new ServiceTypeConfiguration());
            modelBuilder.Configurations.Add(new SuggestionsComplaintConfiguration());
            modelBuilder.Configurations.Add(new SysLogConfiguration());
            modelBuilder.Configurations.Add(new TruckConfiguration());
            modelBuilder.Configurations.Add(new TruckTypeConfiguration());
            modelBuilder.Configurations.Add(new UserConfiguration());
            modelBuilder.Configurations.Add(new UserDeviceConfiguration());
        }

        public static System.Data.Entity.DbModelBuilder CreateModel(System.Data.Entity.DbModelBuilder modelBuilder, string schema)
        {
            modelBuilder.Configurations.Add(new AcceptOfferConfiguration(schema));
            modelBuilder.Configurations.Add(new DeviceConfiguration(schema));
            modelBuilder.Configurations.Add(new InterestConfiguration(schema));
            modelBuilder.Configurations.Add(new MessageConfiguration(schema));
            modelBuilder.Configurations.Add(new OfferConfiguration(schema));
            modelBuilder.Configurations.Add(new OfferDetailConfiguration(schema));
            modelBuilder.Configurations.Add(new OfferImageConfiguration(schema));
            modelBuilder.Configurations.Add(new PredefinedActionConfiguration(schema));
            modelBuilder.Configurations.Add(new ProposalPriceConfiguration(schema));
            modelBuilder.Configurations.Add(new RatingConfiguration(schema));
            modelBuilder.Configurations.Add(new RequestConfiguration(schema));
            modelBuilder.Configurations.Add(new RequestDetaileConfiguration(schema));
            modelBuilder.Configurations.Add(new RequestDetailesPriceConfiguration(schema));
            modelBuilder.Configurations.Add(new ServiceTypeConfiguration(schema));
            modelBuilder.Configurations.Add(new SuggestionsComplaintConfiguration(schema));
            modelBuilder.Configurations.Add(new SysLogConfiguration(schema));
            modelBuilder.Configurations.Add(new TruckConfiguration(schema));
            modelBuilder.Configurations.Add(new TruckTypeConfiguration(schema));
            modelBuilder.Configurations.Add(new UserConfiguration(schema));
            modelBuilder.Configurations.Add(new UserDeviceConfiguration(schema));
            return modelBuilder;
        }
        partial void InitializePartial();
        partial void OnModelCreatingPartial(System.Data.Entity.DbModelBuilder modelBuilder);
    }
}
// </auto-generated>
